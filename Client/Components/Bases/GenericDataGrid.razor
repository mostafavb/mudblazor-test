@using System.Reflection;
@using Ui.WebAssembly.Extensions;
@using Ui.WebAssembly.Models;
@using Ui.WebAssembly.Utilities;

@typeparam T where T: class,new()


<MudDialog @bind-IsVisible="showFileUploadDialog" Options="@_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.CloudUpload" Class="mr-3" /> Upload a valid file
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudFileUpload T="IBrowserFile" Accept=".xlsx, .csv" OnFilesChanged="@(OnFilesChanged)">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                           Variant="Variant.Text"
                           Color="Color.Primary"
                           for="@context">
                    <MudText> Select a file</MudText>
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
        @if (_file is not null)
        {
            <MudText Typo="Typo.caption">
                <MudIcon Icon="@Icons.Material.Filled.AttachFile" Class="mr-3 pt-2" /> @_file.Name , (@(_file.Size / 1024) KB)
            </MudText>
        }
        @if (showProgress)
        {
            <MudItem>
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            </MudItem>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Surface" OnClick="@(()=>{showFileUploadDialog=false;})" Class="px-10">Cancle</MudButton>
        <MudButton Color="Color.Success" OnClick="OnSubmitFileClick" Class="px-10">Submit</MudButton>
    </DialogActions>
</MudDialog>
@if (showProgress)
{
    <MudItem Class="absolute mt-3 ml-5">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </MudItem>
}

@* =====>   the id should never change <====== *@
<div>
    <MudDataGrid id="generic-datagrid" T="T"
                 Items="Items"
                 ReadOnly="ReadOnly" EditMode="DataGridEditMode"
                 FilterMode="@DataGridFilterMode.Simple"
                 FixedHeader="@FixedHeader"
                 Filterable="@Filterable"
                 QuickFilter="@_quickFilter"
                 CanceledEditingItem="@OnCanceledNewItem"
                 CommittedItemChanges="@OnCommitedNewItem"
                 Height="740px"
                 Virtualize="hasVirtualize"
                 EditDialogOptions="@_dialogOptions"
                 @ref="grid">

        <ToolBarContent>
            @if (ShowMenue)
            {
                <MudBadge Visible="@(bageCounter>0)" Max="200" Content="@bageCounter" Color="Color.Primary" Overlap="true">
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert" Dense="true">
                        <MudMenuItem Icon="@Icons.Material.Filled.Add" OnClick="@OnClickAddItem">
                            <MudText Typo="Typo.caption">Add new item</MudText>
                        </MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.FileUpload" OnClick="@ShowFileUploadDialog">
                            <MudText Typo="Typo.caption"> Import from file</MudText>
                        </MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.FileDownload" OnClick="@OnDownloadClicked">
                            <MudText Typo="Typo.caption"> Export as a file</MudText>
                        </MudMenuItem>
                        @if (ShowCheckDifference)
                        {
                            <MudMenuItem IconColor="@(bageCounter > 0 ? Color.Warning: Color.Surface)" Icon="@Icons.Material.Filled.DataObject"
                                 OnClick="@(async (e)=> await CheckDataDifferenceHandler(e))">
                                <MudText Typo="Typo.caption"> Check data changes</MudText>
                            </MudMenuItem>
                        }
                        <MudMenuItem Icon="@Icons.Material.Filled.Save" OnClick="@ApplyChangedData">
                            <MudText Typo="Typo.caption"> Apply changes</MudText>
                        </MudMenuItem>
                    </MudMenu>
                </MudBadge>
            }
            <MudText Typo="Typo.h6" Class="ma-3">@HeaderTitle</MudText>
            @if (HasSearchbar)
            {
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="false"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            }
        </ToolBarContent>
        <Columns>
            <CascadingValue Name="ExternalData" Value="ExternalData" IsFixed="true">
                <GenericDataColumns Properties="_propertyInfos" TItem="T"
                                    IsFormOpened="isFormOpened"
                                    ShowDeleteButton="ShowDeleteRowButton" ShowEditeButton="ShowEditRowButton"
                                    OnDeleteRow="OnDeleteRowClick" OnEditRow="OnEditRowClick" OnEditCell="OnCellChangesCommitted">
                </GenericDataColumns>
            </CascadingValue>
        </Columns>
    </MudDataGrid>
</div>